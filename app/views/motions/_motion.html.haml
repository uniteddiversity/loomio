.motion
  .row
    .span4.motion-header-info
      .clearfix
        %h3.motion-title.word-break= motion.name
        - if motion.closed?
          %span.label.label-important= t(:closed)
      #closing-info
        - if motion.voting?
          = t(:proposal_closing_when, when: time_ago_in_words(motion.closing_at))
        - else
          %span= t(:proposal_closed_when, when: time_ago_in_words(motion.closed_at))
      .proposed-by
        = t(:proposed_when_by_who, when: time_ago_in_words(motion.created_at), who: motion.author_name)
    .span2.motion-admin-buttons
      = render '/motions/admin_buttons', motion: motion unless motion.closed?
  .row
    .span5
      =render "motions/outcome_statement", motion: motion, this_group: this_group if motion.closed?

  .row
    .span5
      .description
        .long-description
          = render_rich_text(motion.description, false)

  .pie{id: "graph_#{motion.id}"}
  .percentage-to-vote
    - if motion.closed?
      = t(:engagement_on_closed_proposal, percent: motion.percent_voted, :numerator => (motion.group_size_when_voting - motion.members_not_voted_count), denominator:  motion.group_size_when_voting)
    - else
      = t(:engagement_on_open_proposal, percent: motion.percent_voted, :numerator => (motion.group_size_when_voting - motion.members_not_voted_count), denominator:  motion.group_size_when_voting)

  .votes
    - if can? :vote, motion
      - if display_vote_buttons?(motion, current_user)
        = render 'motions/cast_vote', motion: motion
    - else
      = render 'motions/cast_vote', motion: motion, prompt_visitor_to_authenticate: true

    .votes-table= render "motions/votes_table", motion: motion

  = render('motions/motion_pie_javascript',
      diameter: 200,
      motion: motion,
      padding: 0,
      gap: 5,
      legend: 'true')
